In [1]: results
Out[1]: 
{'add': array([  1.59287700e+06,   4.58000000e+02,   2.00000000e+00, ...,
         7.36000000e+03,   2.27085000e+05,   1.27490000e+04]),
 'bins': array([  0.00000000e+00,   3.00000000e+00,   6.00000000e+00, ...,
         5.02800000e+03,   5.03100000e+03,   5.03400000e+03]),
 'commits': array([5510,    2,    1, ...,  412, 2606,  536]),
 'delete': array([  9.60000000e+01,   0.00000000e+00,   2.00000000e+00, ...,
         4.54200000e+03,   2.30676000e+05,   7.90400000e+03]),
 'dev': array([  5.,   1.,   2., ...,  26.,  64.,  39.]),
 'locs': array([  1.59297300e+06,   4.58000000e+02,   4.00000000e+00, ...,
         1.19020000e+04,   4.57761000e+05,   2.06530000e+04])}

In [2]: t = results['bins'][:-1]

In [3]: a = results['locs']

In [4]: import pylab as pl

In [5]: pl.plot(t,a)
Out[5]: [<matplotlib.lines.Line2D at 0x9823f8c>]

In [6]: pl.show()
^C
---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
/home/sb/dlab/mozilla/version-control/<ipython-input-6-884887d53e53> in <module>()
----> 1 pl.show()

/usr/lib/pymodules/python2.7/matplotlib/pyplot.pyc in show(*args, **kw)
    137     """
    138     global _show
--> 139     _show(*args, **kw)
    140 
    141 

/usr/lib/pymodules/python2.7/matplotlib/backend_bases.pyc in __call__(self, block)
    107 
    108         if not is_interactive():
--> 109             self.mainloop()
    110 
    111     def mainloop(self):

/usr/lib/pymodules/python2.7/matplotlib/backends/backend_tkagg.pyc in mainloop(self)
     67 class Show(ShowBase):
     68     def mainloop(self):
---> 69         Tk.mainloop()
     70 
     71 show = Show()

/usr/lib/python2.7/lib-tk/Tkinter.pyc in mainloop(n)
    326 def mainloop(n=0):
    327     """Run the main loop of Tcl."""
--> 328     _default_root.tk.mainloop(n)
    329 
    330 getint = int

KeyboardInterrupt: 

In [7]: 

In [7]: pl.plot(t,a)
Out[7]: [<matplotlib.lines.Line2D at 0x9c49b0c>]

In [8]: pl.show()

In [9]: tc = 1385

In [10]: pl.loglog(t[t>tc],a[t>tc])
Out[10]: [<matplotlib.lines.Line2D at 0x9da122c>]

In [11]: pl.show()\
   ....: \
   ....: )
  File "<ipython-input-11-2640d25ded6b>", line 3
    )
    ^
SyntaxError: invalid syntax


In [12]: 

In [12]: pl.show()

In [13]: t>tc
Out[13]: array([False, False, False, ...,  True,  True,  True], dtype=bool)

In [14]: t[t>tc]
Out[14]: array([ 1386.,  1389.,  1392., ...,  5025.,  5028.,  5031.])

In [15]: a[t>tc]
Out[15]: 
array([  970662.,  2875829.,   140803., ...,    11902.,   457761.,
          20653.])

In [16]: pl.show()

In [17]: pl.loglog(t[t>tc],a[t>tc])
Out[17]: [<matplotlib.lines.Line2D at 0xa23240c>]

In [18]: pl.show()

In [19]: pl.plot(t,a)
Out[19]: [<matplotlib.lines.Line2D at 0xa993dac>]

In [20]: pl.show()

In [21]: pl.loglog(t[t>tc],a[t>tc])
Out[21]: [<matplotlib.lines.Line2D at 0xab8318c>]

In [22]: pl.show()

In [23]: c = (t>tc)*(t<1800)

In [24]: pl.loglog(t[c],a[c])
Out[24]: [<matplotlib.lines.Line2D at 0xb3fe3ec>]

In [25]: pl.show()

In [26]: import scipy
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
/home/sb/dlab/mozilla/version-control/<ipython-input-26-4dc45f4c0083> in <module>()
----> 1 import scipy

ImportError: No module named scipy

In [27]: pl.loglog(t[c],a[c])
Out[27]: [<matplotlib.lines.Line2D at 0xb3fef4c>]

In [28]: pl.show()

In [29]: x = np.log10(t[c])

In [30]: y = np.log10(a[c])\
   ....: 
   ....: y = np.log10(a[c])
  File "<ipython-input-30-8ff118881caf>", line 2
    y = np.log10(a[c])
    ^
SyntaxError: invalid syntax


In [31]: y = np.log10(a[c])

In [32]: pl.plot(x,y,'.')
Out[32]: [<matplotlib.lines.Line2D at 0xc31414c>]

In [33]: pl.show()

In [34]: x
Out[34]: 
array([ 3.14176323,  3.14270225,  3.14363924,  3.14457421,  3.14550717,
        3.14643814,  3.14736711,  3.1482941 ,  3.14921911,  3.15014216,
        3.15106325,  3.1519824 ,  3.1528996 ,  3.15381486,  3.15472821,
        3.15563963,  3.15654915,  3.15745677,  3.15836249,  3.15926633,
        3.16016829,  3.16106839,  3.16196662,  3.16286299,  3.16375752,
        3.16465022,  3.16554108,  3.16643011,  3.16731733,  3.16820275,
        3.16908636,  3.16996817,  3.1708482 ,  3.17172645,  3.17260293,
        3.17347764,  3.1743506 ,  3.1752218 ,  3.17609126,  3.17695898,
        3.17782497,  3.17868924,  3.17955179,  3.18041263,  3.18127177,
        3.18212921,  3.18298497,  3.18383904,  3.18469143,  3.18554215,
        3.18639122,  3.18723862,  3.18808437,  3.18892848,  3.18977096,
        3.1906118 ,  3.19145101,  3.19228861,  3.1931246 ,  3.19395898,
        3.19479176,  3.19562294,  3.19645254,  3.19728056,  3.198107  ,
        3.19893187,  3.19975518,  3.20057693,  3.20139712,  3.20221578,
        3.20303289,  3.20384846,  3.20466251,  3.20547504,  3.20628604,
        3.20709554,  3.20790353,  3.20871002,  3.20951501,  3.21031852,
        3.21112054,  3.21192108,  3.21272015,  3.21351776,  3.2143139 ,
        3.21510858,  3.21590181,  3.2166936 ,  3.21748394,  3.21827285,
        3.21906033,  3.21984639,  3.22063102,  3.22141424,  3.22219605,
        3.22297645,  3.22375545,  3.22453306,  3.22530928,  3.22608412,
        3.22685757,  3.22762965,  3.22840036,  3.2291697 ,  3.22993769,
        3.23070431,  3.23146959,  3.23223352,  3.23299611,  3.23375736,
        3.23451728,  3.23527588,  3.23603315,  3.2367891 ,  3.23754374,
        3.23829707,  3.23904909,  3.23979982,  3.24054925,  3.24129739,
        3.24204424,  3.24278981,  3.2435341 ,  3.24427712,  3.24501887,
        3.24575936,  3.24649858,  3.24723655,  3.24797327,  3.24870874,
        3.24944296,  3.25017595,  3.2509077 ,  3.25163822,  3.25236751,
        3.25309559,  3.25382244,  3.25454808])

In [35]: np.polyfit(x,y,1)
Out[35]: array([ -9.66828968,  35.98687062])

In [36]: x
Out[36]: 
array([ 3.14176323,  3.14270225,  3.14363924,  3.14457421,  3.14550717,
        3.14643814,  3.14736711,  3.1482941 ,  3.14921911,  3.15014216,
        3.15106325,  3.1519824 ,  3.1528996 ,  3.15381486,  3.15472821,
        3.15563963,  3.15654915,  3.15745677,  3.15836249,  3.15926633,
        3.16016829,  3.16106839,  3.16196662,  3.16286299,  3.16375752,
        3.16465022,  3.16554108,  3.16643011,  3.16731733,  3.16820275,
        3.16908636,  3.16996817,  3.1708482 ,  3.17172645,  3.17260293,
        3.17347764,  3.1743506 ,  3.1752218 ,  3.17609126,  3.17695898,
        3.17782497,  3.17868924,  3.17955179,  3.18041263,  3.18127177,
        3.18212921,  3.18298497,  3.18383904,  3.18469143,  3.18554215,
        3.18639122,  3.18723862,  3.18808437,  3.18892848,  3.18977096,
        3.1906118 ,  3.19145101,  3.19228861,  3.1931246 ,  3.19395898,
        3.19479176,  3.19562294,  3.19645254,  3.19728056,  3.198107  ,
        3.19893187,  3.19975518,  3.20057693,  3.20139712,  3.20221578,
        3.20303289,  3.20384846,  3.20466251,  3.20547504,  3.20628604,
        3.20709554,  3.20790353,  3.20871002,  3.20951501,  3.21031852,
        3.21112054,  3.21192108,  3.21272015,  3.21351776,  3.2143139 ,
        3.21510858,  3.21590181,  3.2166936 ,  3.21748394,  3.21827285,
        3.21906033,  3.21984639,  3.22063102,  3.22141424,  3.22219605,
        3.22297645,  3.22375545,  3.22453306,  3.22530928,  3.22608412,
        3.22685757,  3.22762965,  3.22840036,  3.2291697 ,  3.22993769,
        3.23070431,  3.23146959,  3.23223352,  3.23299611,  3.23375736,
        3.23451728,  3.23527588,  3.23603315,  3.2367891 ,  3.23754374,
        3.23829707,  3.23904909,  3.23979982,  3.24054925,  3.24129739,
        3.24204424,  3.24278981,  3.2435341 ,  3.24427712,  3.24501887,
        3.24575936,  3.24649858,  3.24723655,  3.24797327,  3.24870874,
        3.24944296,  3.25017595,  3.2509077 ,  3.25163822,  3.25236751,
        3.25309559,  3.25382244,  3.25454808])

In [37]: t
Out[37]: 
array([  0.00000000e+00,   3.00000000e+00,   6.00000000e+00, ...,
         5.02500000e+03,   5.02800000e+03,   5.03100000e+03])

In [38]: t[c]
Out[38]: 
array([ 1386.,  1389.,  1392.,  1395.,  1398.,  1401.,  1404.,  1407.,
        1410.,  1413.,  1416.,  1419.,  1422.,  1425.,  1428.,  1431.,
        1434.,  1437.,  1440.,  1443.,  1446.,  1449.,  1452.,  1455.,
        1458.,  1461.,  1464.,  1467.,  1470.,  1473.,  1476.,  1479.,
        1482.,  1485.,  1488.,  1491.,  1494.,  1497.,  1500.,  1503.,
        1506.,  1509.,  1512.,  1515.,  1518.,  1521.,  1524.,  1527.,
        1530.,  1533.,  1536.,  1539.,  1542.,  1545.,  1548.,  1551.,
        1554.,  1557.,  1560.,  1563.,  1566.,  1569.,  1572.,  1575.,
        1578.,  1581.,  1584.,  1587.,  1590.,  1593.,  1596.,  1599.,
        1602.,  1605.,  1608.,  1611.,  1614.,  1617.,  1620.,  1623.,
        1626.,  1629.,  1632.,  1635.,  1638.,  1641.,  1644.,  1647.,
        1650.,  1653.,  1656.,  1659.,  1662.,  1665.,  1668.,  1671.,
        1674.,  1677.,  1680.,  1683.,  1686.,  1689.,  1692.,  1695.,
        1698.,  1701.,  1704.,  1707.,  1710.,  1713.,  1716.,  1719.,
        1722.,  1725.,  1728.,  1731.,  1734.,  1737.,  1740.,  1743.,
        1746.,  1749.,  1752.,  1755.,  1758.,  1761.,  1764.,  1767.,
        1770.,  1773.,  1776.,  1779.,  1782.,  1785.,  1788.,  1791.,
        1794.,  1797.])

In [39]: t2 = t[c]-t[c][0]

In [40]: x2 = np.log10(t2)
/usr/bin/ipython:1: RuntimeWarning: divide by zero encountered in log10
  #!/usr/bin/env python

In [41]: x2 = np.log10(t2+1)

In [42]: pl.plot(x2,y)
Out[42]: [<matplotlib.lines.Line2D at 0xbe7d2ac>]

In [43]: pl.show()

In [44]: np.polyfit(x2,y,1)
Out[44]: array([-0.66169453,  6.48521087])

In [45]: a
Out[45]: 
array([  1.59297300e+06,   4.58000000e+02,   4.00000000e+00, ...,
         1.19020000e+04,   4.57761000e+05,   2.06530000e+04])

In [46]: c
Out[46]: array([False, False, False, ..., False, False, False], dtype=bool)

In [47]: a
Out[47]: 
array([  1.59297300e+06,   4.58000000e+02,   4.00000000e+00, ...,
         1.19020000e+04,   4.57761000e+05,   2.06530000e+04])

In [48]: t
Out[48]: 
array([  0.00000000e+00,   3.00000000e+00,   6.00000000e+00, ...,
         5.02500000e+03,   5.02800000e+03,   5.03100000e+03])

In [49]: [t>300]
Out[49]: [array([False, False, False, ...,  True,  True,  True], dtype=bool)]

In [50]: t_min = 300

In [51]: c = (t>t_min)*(t<tc)

In [52]: pl.loglog(t[c],a[c])
Out[52]: [<matplotlib.lines.Line2D at 0xc0d974c>]

In [53]: pl.show()

In [54]: np.reverse(c)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
/home/sb/dlab/mozilla/version-control/<ipython-input-54-79344a86e161> in <module>()
----> 1 np.reverse(c)

AttributeError: 'module' object has no attribute 'reverse'

In [55]: abs(t-tc)
Out[55]: array([ 1385.,  1382.,  1379., ...,  3640.,  3643.,  3646.])

In [56]: t-tc
Out[56]: array([-1385., -1382., -1379., ...,  3640.,  3643.,  3646.])

In [57]: -t-tc
Out[57]: array([-1385., -1388., -1391., ..., -6410., -6413., -6416.])

In [58]: -(t-tc)
Out[58]: array([ 1385.,  1382.,  1379., ..., -3640., -3643., -3646.])

In [59]: t[c] -tc
Out[59]: 
array([-1082., -1079., -1076., -1073., -1070., -1067., -1064., -1061.,
       -1058., -1055., -1052., -1049., -1046., -1043., -1040., -1037.,
       -1034., -1031., -1028., -1025., -1022., -1019., -1016., -1013.,
       -1010., -1007., -1004., -1001.,  -998.,  -995.,  -992.,  -989.,
        -986.,  -983.,  -980.,  -977.,  -974.,  -971.,  -968.,  -965.,
        -962.,  -959.,  -956.,  -953.,  -950.,  -947.,  -944.,  -941.,
        -938.,  -935.,  -932.,  -929.,  -926.,  -923.,  -920.,  -917.,
        -914.,  -911.,  -908.,  -905.,  -902.,  -899.,  -896.,  -893.,
        -890.,  -887.,  -884.,  -881.,  -878.,  -875.,  -872.,  -869.,
        -866.,  -863.,  -860.,  -857.,  -854.,  -851.,  -848.,  -845.,
        -842.,  -839.,  -836.,  -833.,  -830.,  -827.,  -824.,  -821.,
        -818.,  -815.,  -812.,  -809.,  -806.,  -803.,  -800.,  -797.,
        -794.,  -791.,  -788.,  -785.,  -782.,  -779.,  -776.,  -773.,
        -770.,  -767.,  -764.,  -761.,  -758.,  -755.,  -752.,  -749.,
        -746.,  -743.,  -740.,  -737.,  -734.,  -731.,  -728.,  -725.,
        -722.,  -719.,  -716.,  -713.,  -710.,  -707.,  -704.,  -701.,
        -698.,  -695.,  -692.,  -689.,  -686.,  -683.,  -680.,  -677.,
        -674.,  -671.,  -668.,  -665.,  -662.,  -659.,  -656.,  -653.,
        -650.,  -647.,  -644.,  -641.,  -638.,  -635.,  -632.,  -629.,
        -626.,  -623.,  -620.,  -617.,  -614.,  -611.,  -608.,  -605.,
        -602.,  -599.,  -596.,  -593.,  -590.,  -587.,  -584.,  -581.,
        -578.,  -575.,  -572.,  -569.,  -566.,  -563.,  -560.,  -557.,
        -554.,  -551.,  -548.,  -545.,  -542.,  -539.,  -536.,  -533.,
        -530.,  -527.,  -524.,  -521.,  -518.,  -515.,  -512.,  -509.,
        -506.,  -503.,  -500.,  -497.,  -494.,  -491.,  -488.,  -485.,
        -482.,  -479.,  -476.,  -473.,  -470.,  -467.,  -464.,  -461.,
        -458.,  -455.,  -452.,  -449.,  -446.,  -443.,  -440.,  -437.,
        -434.,  -431.,  -428.,  -425.,  -422.,  -419.,  -416.,  -413.,
        -410.,  -407.,  -404.,  -401.,  -398.,  -395.,  -392.,  -389.,
        -386.,  -383.,  -380.,  -377.,  -374.,  -371.,  -368.,  -365.,
        -362.,  -359.,  -356.,  -353.,  -350.,  -347.,  -344.,  -341.,
        -338.,  -335.,  -332.,  -329.,  -326.,  -323.,  -320.,  -317.,
        -314.,  -311.,  -308.,  -305.,  -302.,  -299.,  -296.,  -293.,
        -290.,  -287.,  -284.,  -281.,  -278.,  -275.,  -272.,  -269.,
        -266.,  -263.,  -260.,  -257.,  -254.,  -251.,  -248.,  -245.,
        -242.,  -239.,  -236.,  -233.,  -230.,  -227.,  -224.,  -221.,
        -218.,  -215.,  -212.,  -209.,  -206.,  -203.,  -200.,  -197.,
        -194.,  -191.,  -188.,  -185.,  -182.,  -179.,  -176.,  -173.,
        -170.,  -167.,  -164.,  -161.,  -158.,  -155.,  -152.,  -149.,
        -146.,  -143.,  -140.,  -137.,  -134.,  -131.,  -128.,  -125.,
        -122.,  -119.,  -116.,  -113.,  -110.,  -107.,  -104.,  -101.,
         -98.,   -95.,   -92.,   -89.,   -86.,   -83.,   -80.,   -77.,
         -74.,   -71.,   -68.,   -65.,   -62.,   -59.,   -56.,   -53.,
         -50.,   -47.,   -44.,   -41.,   -38.,   -35.,   -32.,   -29.,
         -26.,   -23.,   -20.,   -17.,   -14.,   -11.,    -8.,    -5.,
          -2.])

In [60]: abs(t[c] -tc)
Out[60]: 
array([ 1082.,  1079.,  1076.,  1073.,  1070.,  1067.,  1064.,  1061.,
        1058.,  1055.,  1052.,  1049.,  1046.,  1043.,  1040.,  1037.,
        1034.,  1031.,  1028.,  1025.,  1022.,  1019.,  1016.,  1013.,
        1010.,  1007.,  1004.,  1001.,   998.,   995.,   992.,   989.,
         986.,   983.,   980.,   977.,   974.,   971.,   968.,   965.,
         962.,   959.,   956.,   953.,   950.,   947.,   944.,   941.,
         938.,   935.,   932.,   929.,   926.,   923.,   920.,   917.,
         914.,   911.,   908.,   905.,   902.,   899.,   896.,   893.,
         890.,   887.,   884.,   881.,   878.,   875.,   872.,   869.,
         866.,   863.,   860.,   857.,   854.,   851.,   848.,   845.,
         842.,   839.,   836.,   833.,   830.,   827.,   824.,   821.,
         818.,   815.,   812.,   809.,   806.,   803.,   800.,   797.,
         794.,   791.,   788.,   785.,   782.,   779.,   776.,   773.,
         770.,   767.,   764.,   761.,   758.,   755.,   752.,   749.,
         746.,   743.,   740.,   737.,   734.,   731.,   728.,   725.,
         722.,   719.,   716.,   713.,   710.,   707.,   704.,   701.,
         698.,   695.,   692.,   689.,   686.,   683.,   680.,   677.,
         674.,   671.,   668.,   665.,   662.,   659.,   656.,   653.,
         650.,   647.,   644.,   641.,   638.,   635.,   632.,   629.,
         626.,   623.,   620.,   617.,   614.,   611.,   608.,   605.,
         602.,   599.,   596.,   593.,   590.,   587.,   584.,   581.,
         578.,   575.,   572.,   569.,   566.,   563.,   560.,   557.,
         554.,   551.,   548.,   545.,   542.,   539.,   536.,   533.,
         530.,   527.,   524.,   521.,   518.,   515.,   512.,   509.,
         506.,   503.,   500.,   497.,   494.,   491.,   488.,   485.,
         482.,   479.,   476.,   473.,   470.,   467.,   464.,   461.,
         458.,   455.,   452.,   449.,   446.,   443.,   440.,   437.,
         434.,   431.,   428.,   425.,   422.,   419.,   416.,   413.,
         410.,   407.,   404.,   401.,   398.,   395.,   392.,   389.,
         386.,   383.,   380.,   377.,   374.,   371.,   368.,   365.,
         362.,   359.,   356.,   353.,   350.,   347.,   344.,   341.,
         338.,   335.,   332.,   329.,   326.,   323.,   320.,   317.,
         314.,   311.,   308.,   305.,   302.,   299.,   296.,   293.,
         290.,   287.,   284.,   281.,   278.,   275.,   272.,   269.,
         266.,   263.,   260.,   257.,   254.,   251.,   248.,   245.,
         242.,   239.,   236.,   233.,   230.,   227.,   224.,   221.,
         218.,   215.,   212.,   209.,   206.,   203.,   200.,   197.,
         194.,   191.,   188.,   185.,   182.,   179.,   176.,   173.,
         170.,   167.,   164.,   161.,   158.,   155.,   152.,   149.,
         146.,   143.,   140.,   137.,   134.,   131.,   128.,   125.,
         122.,   119.,   116.,   113.,   110.,   107.,   104.,   101.,
          98.,    95.,    92.,    89.,    86.,    83.,    80.,    77.,
          74.,    71.,    68.,    65.,    62.,    59.,    56.,    53.,
          50.,    47.,    44.,    41.,    38.,    35.,    32.,    29.,
          26.,    23.,    20.,    17.,    14.,    11.,     8.,     5.,
           2.])

In [61]: t_flip = abs(t[c] -tc)

In [62]: pl.loglog(t_flip,a[c])
Out[62]: [<matplotlib.lines.Line2D at 0xd82790c>]

In [63]: pl.show()

In [64]: np.polyfit(np.log10(t_flip),np.log10(a[c]))
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
/home/sb/dlab/mozilla/version-control/<ipython-input-64-e4e1b878af93> in <module>()
----> 1 np.polyfit(np.log10(t_flip),np.log10(a[c]))

TypeError: polyfit() takes at least 3 arguments (2 given)

In [65]: np.polyfit(np.log10(t_flip),np.log10(a[c]),1)
Out[65]: array([-0.59494316,  6.4473423 ])

In [66]: pl.plot(t,np.log10(a))
Out[66]: [<matplotlib.lines.Line2D at 0xbffda4c>]

In [67]: pl.show()

In [68]: results
Out[68]: 
{'add': array([  1.59287700e+06,   4.58000000e+02,   2.00000000e+00, ...,
         7.36000000e+03,   2.27085000e+05,   1.27490000e+04]),
 'bins': array([  0.00000000e+00,   3.00000000e+00,   6.00000000e+00, ...,
         5.02800000e+03,   5.03100000e+03,   5.03400000e+03]),
 'commits': array([5510,    2,    1, ...,  412, 2606,  536]),
 'delete': array([  9.60000000e+01,   0.00000000e+00,   2.00000000e+00, ...,
         4.54200000e+03,   2.30676000e+05,   7.90400000e+03]),
 'dev': array([  5.,   1.,   2., ...,  26.,  64.,  39.]),
 'locs': array([  1.59297300e+06,   4.58000000e+02,   4.00000000e+00, ...,
         1.19020000e+04,   4.57761000e+05,   2.06530000e+04])}

In [69]: pl.plot(t,results['dev'])
Out[69]: [<matplotlib.lines.Line2D at 0xc6c008c>]

In [70]: p.show()
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
/home/sb/dlab/mozilla/version-control/<ipython-input-70-709f73884a30> in <module>()
----> 1 p.show()

NameError: name 'p' is not defined

In [71]: pl.show()

In [72]: pl.plot(t,results['delete'])
Out[72]: [<matplotlib.lines.Line2D at 0xec3f8cc>]

In [73]: pl.show()

In [74]: pl.plot(t,results['commits'])
Out[74]: [<matplotlib.lines.Line2D at 0xc7637cc>]

In [75]: pl.show()

In [76]: 

